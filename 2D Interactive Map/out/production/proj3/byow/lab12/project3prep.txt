Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the Project 3 side?

<<<<<<< HEAD

A: The tesslation on the project three is forming our world. And the rooms and hallways are hexagon.
=======
A:
>>>>>>> 41202096b3a21b56edba09eaea6770a300342e9e

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

<<<<<<< HEAD
A: a method to generate hallway and rooms.
=======
A:
>>>>>>> 41202096b3a21b56edba09eaea6770a300342e9e

-----
Q: What distinguishes a hallway from a room? How are they similar?

<<<<<<< HEAD
A: A room do not have an open end while a hallway has a an open end.
=======
A:
>>>>>>> 41202096b3a21b56edba09eaea6770a300342e9e

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

<<<<<<< HEAD
A: One of the lesson I saw are writing down the hexagons one by one instead of classifying it into one columns.
=======
A:
>>>>>>> 41202096b3a21b56edba09eaea6770a300342e9e

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

<<<<<<< HEAD
A: A simple and silly algorithm that I can think of are throwing two rooms and connecting them by a hallway.

Another alogorithm is to throw a room first. then if one of the edge of the room is the same us the hallway's edge then we tesslation.
=======
A:
>>>>>>> 41202096b3a21b56edba09eaea6770a300342e9e
